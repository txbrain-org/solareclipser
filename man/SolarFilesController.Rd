% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SolarFiles.R
\name{SolarFilesController}
\alias{SolarFilesController}
\title{R6 Class: SolarFilesController}
\value{
An R6 object of class \code{SolarFilesController}
}
\description{
A controller class for managing and accessing trait-specific output files in a \code{SolarFiles} object.
}
\details{
This class wraps around a \code{SolarFiles} instance and provides helper methods to set and retrieve
polygenic analysis output files (e.g., \code{.mod}, \code{.out}, \code{.stats}) based on current trait names.
It is particularly useful for post-processing or organizing model outputs after a SOLAR polygenic run.
}
\section{Usage Example}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{files <- SolarFiles$new(settings = list(output = list(dir = "solar_output")))
files$set_polygenic_trait_d("height")
ctrl <- SolarFilesController$new(sf = files)
ctrl$set_polygenic_trait_d_files()
mod_files <- ctrl$get_mod_files()
}\if{html}{\out{</div>}}
}

\section{Methods}{

\itemize{
\item \code{set_polygenic_trait_d_files()}: Scan directory and assign \code{trait_d_files} in \code{SolarFiles}.
\item \code{get_polygenic_trait_d_files()}: Return all polygenic output files for current trait.
\item \code{get_mod_files()}: Return only \code{.mod} model files.
\item \code{get_out_files()}: Return only \code{.out} output files.
\item \code{get_stats_files()}: Return only \code{.stats} statistics files.
}
}

\section{Super class}{
\code{\link[solareclipser:SolarFiles]{solareclipser::SolarFiles}} -> \code{SolarFilesController}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SolarFilesController-new}{\code{SolarFilesController$new()}}
\item \href{#method-SolarFilesController-print}{\code{SolarFilesController$print()}}
\item \href{#method-SolarFilesController-set_polygenic_trait_d_files}{\code{SolarFilesController$set_polygenic_trait_d_files()}}
\item \href{#method-SolarFilesController-get_polygenic_trait_d_files}{\code{SolarFilesController$get_polygenic_trait_d_files()}}
\item \href{#method-SolarFilesController-get_mod_files}{\code{SolarFilesController$get_mod_files()}}
\item \href{#method-SolarFilesController-get_out_files}{\code{SolarFilesController$get_out_files()}}
\item \href{#method-SolarFilesController-get_stats_files}{\code{SolarFilesController$get_stats_files()}}
\item \href{#method-SolarFilesController-clone}{\code{SolarFilesController$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="get_fphi_files"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-get_fphi_files'><code>solareclipser::SolarFiles$get_fphi_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="get_polygenic_files"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-get_polygenic_files'><code>solareclipser::SolarFiles$get_polygenic_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="get_settings"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-get_settings'><code>solareclipser::SolarFiles$get_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="get_shared_files"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-get_shared_files'><code>solareclipser::SolarFiles$get_shared_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_fphi_eigenvalues_f"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_fphi_eigenvalues_f'><code>solareclipser::SolarFiles$set_fphi_eigenvalues_f()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_fphi_eigenvectors_f"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_fphi_eigenvectors_f'><code>solareclipser::SolarFiles$set_fphi_eigenvectors_f()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_fphi_evd_data_bn"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_fphi_evd_data_bn'><code>solareclipser::SolarFiles$set_fphi_evd_data_bn()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_fphi_ids_f"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_fphi_ids_f'><code>solareclipser::SolarFiles$set_fphi_ids_f()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_fphi_notes_f"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_fphi_notes_f'><code>solareclipser::SolarFiles$set_fphi_notes_f()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_polygenic"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_polygenic'><code>solareclipser::SolarFiles$set_polygenic()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_polygenic_trait_d"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_polygenic_trait_d'><code>solareclipser::SolarFiles$set_polygenic_trait_d()</code></a></span></li>
<li><span class="pkg-link" data-pkg="solareclipser" data-topic="SolarFiles" data-id="set_settings"><a href='../../solareclipser/html/SolarFiles.html#method-SolarFiles-set_settings'><code>solareclipser::SolarFiles$set_settings()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-new"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new \code{SolarFilesController} object using an existing \code{SolarFiles} instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$new(sf = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sf}}{An object of class \code{SolarFiles}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the \code{SolarFilesController} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-print"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-print}{}}}
\subsection{Method \code{print()}}{
Print a summary of the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-set_polygenic_trait_d_files"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-set_polygenic_trait_d_files}{}}}
\subsection{Method \code{set_polygenic_trait_d_files()}}{
Populate and set the \code{trait_d_files} field in the linked \code{SolarFiles} object
based on the trait name and file path structure.

This function builds the trait directory path using the current settings and trait name,
lists all files under that directory, and assigns them to \code{trait_d_files}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$set_polygenic_trait_d_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the controller object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-get_polygenic_trait_d_files"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-get_polygenic_trait_d_files}{}}}
\subsection{Method \code{get_polygenic_trait_d_files()}}{
Retrieve the list of polygenic trait output files from the linked \code{SolarFiles} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$get_polygenic_trait_d_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of file paths.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-get_mod_files"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-get_mod_files}{}}}
\subsection{Method \code{get_mod_files()}}{
Extract only the \code{.mod} files from the polygenic trait output directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$get_mod_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of \code{.mod} file paths.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-get_out_files"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-get_out_files}{}}}
\subsection{Method \code{get_out_files()}}{
Extract only the \code{.out} files from the polygenic trait output directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$get_out_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of \code{.out} file paths.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-get_stats_files"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-get_stats_files}{}}}
\subsection{Method \code{get_stats_files()}}{
Extract only the \code{.stats} files from the polygenic trait output directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$get_stats_files()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of \code{.stats} file paths.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolarFilesController-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SolarFilesController-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolarFilesController$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
